{
  "root": true,
  "env": {
    "browser": true,
    "es2022": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:astro/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": ["@typescript-eslint"],
  "rules": {
    // TypeScript-specific rules
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/explicit-function-return-type": [
      "warn",
      {
        "allowExpressions": true,
        "allowTypedFunctionExpressions": true,
        "allowHigherOrderFunctions": true
      }
    ],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "prefer": "type-imports",
        "disallowTypeAnnotations": false
      }
    ],

    // General code quality rules
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-debugger": "error",
    "prefer-const": "error",
    "no-var": "error",
    "object-shorthand": "error",
    "prefer-template": "error",
    "prefer-arrow-callback": "error",
    "arrow-body-style": ["error", "as-needed"],
    "no-duplicate-imports": "error",
    "no-useless-rename": "error",

    // Best practices
    "eqeqeq": ["error", "always", { "null": "ignore" }],
    "no-eval": "error",
    "no-implied-eval": "error",
    "no-new-func": "error",
    "no-return-await": "error",
    "require-await": "error",
    "no-throw-literal": "error",
    "prefer-promise-reject-errors": "error",

    // Code complexity
    "complexity": ["warn", 15],
    "max-depth": ["warn", 4],
    "max-lines": ["warn", { "max": 500, "skipBlankLines": true, "skipComments": true }],
    "max-lines-per-function": [
      "warn",
      {
        "max": 100,
        "skipBlankLines": true,
        "skipComments": true
      }
    ],
    "max-params": ["warn", 5]
  },
  "overrides": [
    // Astro files
    {
      "files": ["*.astro"],
      "parser": "astro-eslint-parser",
      "parserOptions": {
        "parser": "@typescript-eslint/parser",
        "extraFileExtensions": [".astro"]
      },
      "rules": {
        // Relax some rules for Astro components
        "@typescript-eslint/explicit-function-return-type": "off",
        "no-console": "off"
      }
    },
    // Test files
    {
      "files": ["tests/**/*.ts", "tests/**/*.test.ts", "**/*.spec.ts"],
      "env": {
        "vitest-globals/env": true
      },
      "rules": {
        // Allow more flexibility in tests
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "max-lines-per-function": "off",
        "max-lines": "off"
      }
    },
    // Config files
    {
      "files": ["*.config.js", "*.config.mjs", "*.config.ts"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off",
        "no-console": "off"
      }
    }
  ],
  "ignorePatterns": [
    "dist/",
    ".astro/",
    "node_modules/",
    "coverage/",
    "*.min.js",
    "public/",
    "lighthouse-report.*"
  ]
}
