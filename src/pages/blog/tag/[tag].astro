---
import { getCollection } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import BlogPostCard from '../../../components/BlogPostCard.astro';

export async function getStaticPaths() {
  const allPosts = await getCollection('blog');
  const publishedPosts = allPosts.filter(post => !post.data.draft);

  // Get all unique tags
  const uniqueTags = [...new Set(publishedPosts.flatMap(post => post.data.tags))];

  return uniqueTags.map(tag => {
    const filteredPosts = publishedPosts
      .filter(post => post.data.tags.includes(tag))
      .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

    return {
      params: { tag },
      props: { posts: filteredPosts, tag },
    };
  });
}

const { posts, tag } = Astro.props;
const capitalizedTag = tag.charAt(0).toUpperCase() + tag.slice(1);
---

<BaseLayout
  title={`Posts tagged "${capitalizedTag}" - Andy Woods`}
  description={`All blog posts tagged with ${capitalizedTag}`}
>
  <header class="mb-12">
    <p class="text-sm text-gray-600 mb-2">
      <a href="/blog" class="hover:text-black transition-colors">‚Üê Back to all posts</a>
    </p>
    <h1 class="font-sans text-4xl font-bold mb-4 text-black">
      Posts tagged "{capitalizedTag}"
    </h1>
    <p class="text-lg text-gray-600">
      {posts.length} {posts.length === 1 ? 'post' : 'posts'}
    </p>
  </header>

  <div>
    {posts.map(post => (
      <BlogPostCard
        title={post.data.title}
        date={post.data.date}
        excerpt={post.data.excerpt}
        slug={post.slug}
        tags={post.data.tags}
      />
    ))}
  </div>
</BaseLayout>
