---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';

// Get all published blog posts
const allPosts = await getCollection('blog');
const publishedPosts = allPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

// Group posts by year and month
const postsByYear = publishedPosts.reduce((acc, post) => {
  const year = post.data.date.getFullYear();
  const month = post.data.date.toLocaleString('en-US', { month: 'long' });

  if (!acc[year]) {
    acc[year] = {};
  }
  if (!acc[year][month]) {
    acc[year][month] = [];
  }

  acc[year][month].push(post);
  return acc;
}, {} as Record<number, Record<string, typeof publishedPosts>>);

// Sort years in descending order
const sortedYears = Object.keys(postsByYear)
  .map(Number)
  .sort((a, b) => b - a);
---

<BaseLayout
  title="Archive - Andy Woods"
  description="Complete archive of all blog posts organized by year and month"
>
  <header class="mb-12">
    <h1 class="font-sans text-4xl font-bold mb-4 text-black">Archive</h1>
    <p class="text-lg text-gray-600">
      All posts organized by year and month
    </p>
  </header>

  {sortedYears.map(year => (
    <section class="mb-12">
      <h2 class="font-sans text-3xl font-bold mb-6 text-black">{year}</h2>
      {Object.entries(postsByYear[year]).map(([month, posts]) => (
        <div class="mb-8">
          <h3 class="font-sans text-xl font-semibold mb-4 text-gray-700">{month}</h3>
          <ul class="space-y-3 list-none m-0 p-0">
            {posts.map(post => {
              const formattedDate = new Intl.DateTimeFormat('en-US', {
                month: 'short',
                day: 'numeric'
              }).format(post.data.date);

              return (
                <li class="flex gap-4">
                  <time
                    datetime={post.data.date.toISOString()}
                    class="text-sm text-gray-500 w-16 flex-shrink-0"
                  >
                    {formattedDate}
                  </time>
                  <a
                    href={`/blog/${post.slug}`}
                    class="text-base text-black no-underline hover:opacity-70 transition-opacity flex-1"
                  >
                    {post.data.title}
                  </a>
                </li>
              );
            })}
          </ul>
        </div>
      ))}
    </section>
  ))}

  {publishedPosts.length === 0 && (
    <p class="text-gray-500 italic">No posts yet. Check back soon!</p>
  )}
</BaseLayout>
